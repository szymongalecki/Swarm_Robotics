<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations 
int X[2];
int Y[2];</declaration>
	<template>
		<name x="5" y="5">robot</name>
		<parameter>bool id, int x, int y, int dir_x, int dir_y, int radius, bool turned_random, bool turned_180</parameter>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="-136" y="0">
			<name x="-237" y="-16">connected</name>
		</location>
		<location id="id1" x="297" y="0">
			<name x="212" y="8">forward</name>
		</location>
		<location id="id2" x="773" y="0">
			<name x="798" y="-16">disconnected</name>
		</location>
		<location id="id3" x="773" y="238">
			<name x="799" y="220">turn_180</name>
		</location>
		<location id="id4" x="-136" y="238">
			<name x="-254" y="221">turn_random</name>
		</location>
		<init ref="id0"/>
		<transition id="id5">
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="492" y="-229">turned_180 == true</label>
			<label kind="assignment" x="492" y="-187">x += dir_x,
y += dir_y,
X[id] = x,
Y[id] = y</label>
			<nail x="773" y="-195"/>
			<nail x="391" y="-195"/>
		</transition>
		<transition id="id6">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-51" y="-229">turned_random == true</label>
			<label kind="assignment" x="-34" y="-187">x += dir_x,
y += dir_y,
X[id] = x,
Y[id] = y</label>
			<nail x="-136" y="-195"/>
			<nail x="204" y="-195"/>
		</transition>
		<transition id="id7">
			<source ref="id3"/>
			<target ref="id1"/>
			<label kind="assignment" x="374" y="59">dir_x = dir_x == 0 ? 0 : dir_x == -1 ? 1 : -1,
dir_y = dir_y == 0 ? 0 : dir_y == -1 ? 1 : -1,
x += dir_x,
y += dir_y,
X[id] = x,
Y[id] = y,
turned_180 = true,
turned_random = false</label>
			<nail x="365" y="238"/>
		</transition>
		<transition id="id8">
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="782" y="102">turned_180 == false</label>
		</transition>
		<transition id="id9">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="374" y="-76">abs(X[id] - X[!id]) * abs(X[id] - X[!id]) 
+ abs(Y[id] - Y[!id]) * abs(Y[id] - Y[!id]) 
&gt; (radius*radius)</label>
		</transition>
		<transition id="id10">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-110" y="-76">abs(X[id] - X[!id]) * abs(X[id] - X[!id]) 
+ abs(Y[id] - Y[!id]) * abs(Y[id] - Y[!id]) 
&lt;= (radius*radius)</label>
		</transition>
		<transition id="id11">
			<source ref="id4"/>
			<target ref="id1"/>
			<label kind="select" x="-102" y="246">dir : int[0, 3]</label>
			<label kind="assignment" x="-102" y="59">dir_x = dir == 1 ? 1 : dir == 3 ? -1 : 0,
dir_y = dir == 0 ? 1 : dir == 2 ? -1 : 0,
x += dir_x,
y += dir_y,
X[id] = x,
Y[id] = y,
turned_random = true,
turned_180 = false</label>
			<nail x="221" y="238"/>
		</transition>
		<transition id="id12">
			<source ref="id0"/>
			<target ref="id4"/>
			<label kind="guard" x="-331" y="102">turned_random == false</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
R1 = robot(true, 0, 0, 0, 0, 3, false, false);
R2 = robot(false, 0, 0, 0, 0, 3, false, false);
// List one or more processes to be composed into a system.
system R1, R2;
</system>
	<queries>
		<option key="--diagnostic" value="1"/>
		<query>
			<formula>E&lt;&gt; R1.turn_random</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-03-13 13:10:47 +0100">
				<option key="--diagnostic" value="1"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; R1.turn_180</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-03-13 13:10:51 +0100">
				<option key="--diagnostic" value="1"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; (R1.connected &amp;&amp; R2.connected)</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-03-13 13:11:29 +0100">
				<option key="--diagnostic" value="1"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; (R1.disconnected &amp;&amp; R2.disconnected)</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-03-13 13:11:56 +0100">
				<option key="--diagnostic" value="1"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; (R1.connected &amp;&amp; R2.connected) imply (R1.disconnected &amp;&amp; R2.disconnected)</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-03-13 13:22:22 +0100">
				<option key="--diagnostic" value="1"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; (R1.disconnected &amp;&amp; R2.disconnected) imply (R1.connected &amp;&amp; R2.connected)</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-03-13 13:23:55 +0100">
				<option key="--diagnostic" value="1"/>
			</result>
		</query>
	</queries>
</nta>
